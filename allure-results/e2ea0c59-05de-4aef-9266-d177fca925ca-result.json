{"name": "Авторизация (админка)", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x60fb28ea1863 <unknown>\n#1 0x60fb28b978c6 <unknown>\n#2 0x60fb28b8f9f3 <unknown>\n#3 0x60fb28b7fb2b <unknown>\n#4 0x60fb28b810c2 <unknown>\n#5 0x60fb28b7fe4c <unknown>\n#6 0x60fb28b7f638 <unknown>\n#7 0x60fb28b7f485 <unknown>\n#8 0x60fb28b7d516 <unknown>\n#9 0x60fb28b7da2a <unknown>\n#10 0x60fb28b9a24e <unknown>\n#11 0x60fb28c237c5 <unknown>\n#12 0x60fb28c045a2 <unknown>\n#13 0x60fb28c22c19 <unknown>\n#14 0x60fb28c04343 <unknown>\n#15 0x60fb28bd5593 <unknown>\n#16 0x60fb28bd5f5e <unknown>\n#17 0x60fb28e6584b <unknown>\n#18 0x60fb28e697a5 <unknown>\n#19 0x60fb28e53571 <unknown>\n#20 0x60fb28e6a332 <unknown>\n#21 0x60fb28e3887f <unknown>\n#22 0x60fb28e90728 <unknown>\n#23 0x60fb28e908fb <unknown>\n#24 0x60fb28ea09b4 <unknown>\n#25 0x76b6f3094ac3 <unknown>", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83d75b19cae3997a7d1bb6a5e15aa325\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Авторизация (админка)\")\n    def test_admin_login(browser, base_url):\n        admin_page = AdminPage(browser)\n>       admin_page.open(base_url)\n\ntests/test_start.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects/admin_page.py:27: in open\n    self.browser.get(url + self.PATH)\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x74f1609eb340>, response = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x60fb28e908fb \\\\u003Cunknown>\\\\n#24 0x60fb28ea09b4 \\\\u003Cunknown>\\\\n#25 0x76b6f3094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=123.0.6312.105)\nE       Stacktrace:\nE       #0 0x60fb28ea1863 <unknown>\nE       #1 0x60fb28b978c6 <unknown>\nE       #2 0x60fb28b8f9f3 <unknown>\nE       #3 0x60fb28b7fb2b <unknown>\nE       #4 0x60fb28b810c2 <unknown>\nE       #5 0x60fb28b7fe4c <unknown>\nE       #6 0x60fb28b7f638 <unknown>\nE       #7 0x60fb28b7f485 <unknown>\nE       #8 0x60fb28b7d516 <unknown>\nE       #9 0x60fb28b7da2a <unknown>\nE       #10 0x60fb28b9a24e <unknown>\nE       #11 0x60fb28c237c5 <unknown>\nE       #12 0x60fb28c045a2 <unknown>\nE       #13 0x60fb28c22c19 <unknown>\nE       #14 0x60fb28c04343 <unknown>\nE       #15 0x60fb28bd5593 <unknown>\nE       #16 0x60fb28bd5f5e <unknown>\nE       #17 0x60fb28e6584b <unknown>\nE       #18 0x60fb28e697a5 <unknown>\nE       #19 0x60fb28e53571 <unknown>\nE       #20 0x60fb28e6a332 <unknown>\nE       #21 0x60fb28e3887f <unknown>\nE       #22 0x60fb28e90728 <unknown>\nE       #23 0x60fb28e908fb <unknown>\nE       #24 0x60fb28ea09b4 <unknown>\nE       #25 0x76b6f3094ac3 <unknown>\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException"}, "steps": [{"name": "Открываю http://10.0.2.15:8081/administration", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x60fb28ea1863 <unknown>\n#1 0x60fb28b978c6 <unknown>\n#2 0x60fb28b8f9f3 <unknown>\n#3 0x60fb28b7fb2b <unknown>\n#4 0x60fb28b810c2 <unknown>\n#5 0x60fb28b7fe4c <unknown>\n#6 0x60fb28b7f638 <unknown>\n#7 0x60fb28b7f485 <unknown>\n#8 0x60fb28b7d516 <unknown>\n#9 0x60fb28b7da2a <unknown>\n#10 0x60fb28b9a24e <unknown>\n#11 0x60fb28c237c5 <unknown>\n#12 0x60fb28c045a2 <unknown>\n#13 0x60fb28c22c19 <unknown>\n#14 0x60fb28c04343 <unknown>\n#15 0x60fb28bd5593 <unknown>\n#16 0x60fb28bd5f5e <unknown>\n#17 0x60fb28e6584b <unknown>\n#18 0x60fb28e697a5 <unknown>\n#19 0x60fb28e53571 <unknown>\n#20 0x60fb28e6a332 <unknown>\n#21 0x60fb28e3887f <unknown>\n#22 0x60fb28e90728 <unknown>\n#23 0x60fb28e908fb <unknown>\n#24 0x60fb28ea09b4 <unknown>\n#25 0x76b6f3094ac3 <unknown>\n\n", "trace": "  File \"/home/fuenukkusu2501/Develop/tmp/OTUS_selenium_UI/page_objects/admin_page.py\", line 27, in open\n    self.browser.get(url + self.PATH)\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1720461017300, "stop": 1720461017770}], "start": 1720461017300, "stop": 1720461017774, "uuid": "413e7ed6-f6a6-4f87-8125-c465b219bb55", "historyId": "b25d339a38b605469f6d5d3aad2aaf0c", "testCaseId": "b25d339a38b605469f6d5d3aad2aaf0c", "fullName": "tests.test_start#test_admin_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_start"}, {"name": "host", "value": "Ubuntu"}, {"name": "thread", "value": "14041-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_start"}]}