{"name": "Смена валюты - каталог", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=127.0.6533.119)\nStacktrace:\n#0 0x5fe9c74066ca <unknown>\n#1 0x5fe9c70d7600 <unknown>\n#2 0x5fe9c70cf631 <unknown>\n#3 0x5fe9c70bf839 <unknown>\n#4 0x5fe9c70c15c4 <unknown>\n#5 0x5fe9c70bfb05 <unknown>\n#6 0x5fe9c70bf35f <unknown>\n#7 0x5fe9c70bf252 <unknown>\n#8 0x5fe9c70bd56c <unknown>\n#9 0x5fe9c70bd8ea <unknown>\n#10 0x5fe9c70d9f21 <unknown>\n#11 0x5fe9c7168b45 <unknown>\n#12 0x5fe9c71498a2 <unknown>\n#13 0x5fe9c716804a <unknown>\n#14 0x5fe9c7149643 <unknown>\n#15 0x5fe9c7119d31 <unknown>\n#16 0x5fe9c711a79e <unknown>\n#17 0x5fe9c73ce25b <unknown>\n#18 0x5fe9c73d21f2 <unknown>\n#19 0x5fe9c73bb615 <unknown>\n#20 0x5fe9c73d2d82 <unknown>\n#21 0x5fe9c73a025f <unknown>\n#22 0x5fe9c73f5e68 <unknown>\n#23 0x5fe9c73f6040 <unknown>\n#24 0x5fe9c740549c <unknown>\n#25 0x71f664e9ca94 <unknown>\n#26 0x71f664f29c3c <unknown>", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8dcd7e005282aaa4c863ecfcf803b61c\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Смена валюты - каталог\")\n    def test_currency_change_catalog(browser, base_url):\n        catalog_page = CatalogPage(browser)\n        header = HeaderElement(browser)\n>       catalog_page.open(base_url)\n\ntests/test_start.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/catalog_page.py:10: in open\n    self.browser.get(url + self.PATH)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f986ac14ef0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#24 0x5fe9c740549c \\\\u003Cunknown>\\\\n#25 0x71f664e9ca94 \\\\u003Cunknown>\\\\n#26 0x71f664f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x5fe9c74066ca <unknown>\nE       #1 0x5fe9c70d7600 <unknown>\nE       #2 0x5fe9c70cf631 <unknown>\nE       #3 0x5fe9c70bf839 <unknown>\nE       #4 0x5fe9c70c15c4 <unknown>\nE       #5 0x5fe9c70bfb05 <unknown>\nE       #6 0x5fe9c70bf35f <unknown>\nE       #7 0x5fe9c70bf252 <unknown>\nE       #8 0x5fe9c70bd56c <unknown>\nE       #9 0x5fe9c70bd8ea <unknown>\nE       #10 0x5fe9c70d9f21 <unknown>\nE       #11 0x5fe9c7168b45 <unknown>\nE       #12 0x5fe9c71498a2 <unknown>\nE       #13 0x5fe9c716804a <unknown>\nE       #14 0x5fe9c7149643 <unknown>\nE       #15 0x5fe9c7119d31 <unknown>\nE       #16 0x5fe9c711a79e <unknown>\nE       #17 0x5fe9c73ce25b <unknown>\nE       #18 0x5fe9c73d21f2 <unknown>\nE       #19 0x5fe9c73bb615 <unknown>\nE       #20 0x5fe9c73d2d82 <unknown>\nE       #21 0x5fe9c73a025f <unknown>\nE       #22 0x5fe9c73f5e68 <unknown>\nE       #23 0x5fe9c73f6040 <unknown>\nE       #24 0x5fe9c740549c <unknown>\nE       #25 0x71f664e9ca94 <unknown>\nE       #26 0x71f664f29c3c <unknown>\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException"}, "steps": [{"name": "Открываю http://10.0.2.15:8081/en-gb/catalog/laptop-notebook", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=127.0.6533.119)\nStacktrace:\n#0 0x5fe9c74066ca <unknown>\n#1 0x5fe9c70d7600 <unknown>\n#2 0x5fe9c70cf631 <unknown>\n#3 0x5fe9c70bf839 <unknown>\n#4 0x5fe9c70c15c4 <unknown>\n#5 0x5fe9c70bfb05 <unknown>\n#6 0x5fe9c70bf35f <unknown>\n#7 0x5fe9c70bf252 <unknown>\n#8 0x5fe9c70bd56c <unknown>\n#9 0x5fe9c70bd8ea <unknown>\n#10 0x5fe9c70d9f21 <unknown>\n#11 0x5fe9c7168b45 <unknown>\n#12 0x5fe9c71498a2 <unknown>\n#13 0x5fe9c716804a <unknown>\n#14 0x5fe9c7149643 <unknown>\n#15 0x5fe9c7119d31 <unknown>\n#16 0x5fe9c711a79e <unknown>\n#17 0x5fe9c73ce25b <unknown>\n#18 0x5fe9c73d21f2 <unknown>\n#19 0x5fe9c73bb615 <unknown>\n#20 0x5fe9c73d2d82 <unknown>\n#21 0x5fe9c73a025f <unknown>\n#22 0x5fe9c73f5e68 <unknown>\n#23 0x5fe9c73f6040 <unknown>\n#24 0x5fe9c740549c <unknown>\n#25 0x71f664e9ca94 <unknown>\n#26 0x71f664f29c3c <unknown>\n\n", "trace": "  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/page_objects/catalog_page.py\", line 10, in open\n    self.browser.get(url + self.PATH)\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1724162940771, "stop": 1724162943873}], "start": 1724162940771, "stop": 1724162943874, "uuid": "bda2ddc2-6e02-4e39-8c1f-0edda5a53344", "historyId": "3fa10930be4abb4a820f9e2e7c40c054", "testCaseId": "3fa10930be4abb4a820f9e2e7c40c054", "fullName": "tests.test_start#test_currency_change_catalog", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_start"}, {"name": "host", "value": "fuenukkusu2501-VirtualBox"}, {"name": "thread", "value": "4879-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_start"}]}