{"name": "Смена валюты - каталог", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message:", "trace": "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"aaf211535475c8610b0dc1653155ed43\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Смена валюты - каталог\")\n    def test_currency_change_catalog(browser, base_url):\n        catalog_page = CatalogPage(browser)\n        header = HeaderElement(browser)\n>       catalog_page.open(base_url)\n\ntests/test_start.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/catalog_page.py:10: in open\n    self.browser.get(url + self.PATH)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x711a27687440>, response = {'status': [13, 'unknown error'], 'value': ''}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n>           raise exception_class(value)\nE           selenium.common.exceptions.WebDriverException: Message:\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:193: WebDriverException"}, "steps": [{"name": "Открываю http://10.0.2.15:8081/en-gb/catalog/laptop-notebook", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: \n\n", "trace": "  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/page_objects/catalog_page.py\", line 10, in open\n    self.browser.get(url + self.PATH)\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/fuenukkusu2501/PycharmProjects/OTUS_selenium_UI/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 193, in check_response\n    raise exception_class(value)\n"}, "start": 1725129621834, "stop": 1725129654452}], "start": 1725129621834, "stop": 1725129654474, "uuid": "046df31b-3c66-4d0c-8508-6dcee98c622a", "historyId": "3fa10930be4abb4a820f9e2e7c40c054", "testCaseId": "3fa10930be4abb4a820f9e2e7c40c054", "fullName": "tests.test_start#test_currency_change_catalog", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_start"}, {"name": "host", "value": "fuenukkusu2501-VirtualBox"}, {"name": "thread", "value": "24912-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_start"}]}