{
  "uid" : "a485b6f06477b115",
  "name" : "Удалить товар",
  "fullName" : "tests.test_start#test_delete_product",
  "historyId" : "7d181faf2f27682f61cb2a0d2e84375e",
  "time" : {
    "start" : 1723034596470,
    "stop" : 1723034601723,
    "duration" : 5253
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\n  (Session info: chrome=127.0.6533.88)\nStacktrace:\n#0 0x629a57b1f6ba <unknown>\n#1 0x629a577ef730 <unknown>\n#2 0x629a57845a96 <unknown>\n#3 0x629a578439ad <unknown>\n#4 0x629a57841447 <unknown>\n#5 0x629a5784030e <unknown>\n#6 0x629a57833d66 <unknown>\n#7 0x629a57861a52 <unknown>\n#8 0x629a57833719 <unknown>\n#9 0x629a57861c1e <unknown>\n#10 0x629a578801ca <unknown>\n#11 0x629a578617f3 <unknown>\n#12 0x629a57831ec9 <unknown>\n#13 0x629a5783291e <unknown>\n#14 0x629a57ae59eb <unknown>\n#15 0x629a57ae9972 <unknown>\n#16 0x629a57ad2e15 <unknown>\n#17 0x629a57aea502 <unknown>\n#18 0x629a57ab7d2f <unknown>\n#19 0x629a57b0e578 <unknown>\n#20 0x629a57b0e750 <unknown>\n#21 0x629a57b1e48c <unknown>\n#22 0x78c5b04a5ac3 <unknown>",
  "statusTrace" : "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"49b49506b3828d92e2d3c647c308c80c\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Удалить товар\")\n    def test_delete_product(browser, base_url):\n        admin_page = AdminPage(browser)\n        admin_page.open(base_url)\n        admin_page.login(\"user\", \"bitnami\")\n        admin_page.select_catalog()\n        admin_page.select_products()\n        HomePage(browser).scroll_down()\n>       admin_page.to_the_last_page()\n\ntests/test_start.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects/admin_page.py:105: in to_the_last_page\n    self.get_element(self.LAST_PAGE).click()\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7c30d43492d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x629a57b0e750 \\\\u003Cunknown>\\\\n#21 0x629a57b1e48c \\\\u003Cunknown>\\\\n#22 0x78c5b04a5ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\nE         (Session info: chrome=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x629a57b1f6ba <unknown>\nE       #1 0x629a577ef730 <unknown>\nE       #2 0x629a57845a96 <unknown>\nE       #3 0x629a578439ad <unknown>\nE       #4 0x629a57841447 <unknown>\nE       #5 0x629a5784030e <unknown>\nE       #6 0x629a57833d66 <unknown>\nE       #7 0x629a57861a52 <unknown>\nE       #8 0x629a57833719 <unknown>\nE       #9 0x629a57861c1e <unknown>\nE       #10 0x629a578801ca <unknown>\nE       #11 0x629a578617f3 <unknown>\nE       #12 0x629a57831ec9 <unknown>\nE       #13 0x629a5783291e <unknown>\nE       #14 0x629a57ae59eb <unknown>\nE       #15 0x629a57ae9972 <unknown>\nE       #16 0x629a57ad2e15 <unknown>\nE       #17 0x629a57aea502 <unknown>\nE       #18 0x629a57ab7d2f <unknown>\nE       #19 0x629a57b0e578 <unknown>\nE       #20 0x629a57b0e750 <unknown>\nE       #21 0x629a57b1e48c <unknown>\nE       #22 0x78c5b04a5ac3 <unknown>\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1723034592163,
      "stop" : 1723034596469,
      "duration" : 4306
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d39c02e51a3bdd5c",
      "name" : "49b49506b3828d92e2d3c647c308c80c",
      "source" : "d39c02e51a3bdd5c.json",
      "type" : "application/json",
      "size" : 1082
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1723034596469,
      "stop" : 1723034596469,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\n  (Session info: chrome=127.0.6533.88)\nStacktrace:\n#0 0x629a57b1f6ba <unknown>\n#1 0x629a577ef730 <unknown>\n#2 0x629a57845a96 <unknown>\n#3 0x629a578439ad <unknown>\n#4 0x629a57841447 <unknown>\n#5 0x629a5784030e <unknown>\n#6 0x629a57833d66 <unknown>\n#7 0x629a57861a52 <unknown>\n#8 0x629a57833719 <unknown>\n#9 0x629a57861c1e <unknown>\n#10 0x629a578801ca <unknown>\n#11 0x629a578617f3 <unknown>\n#12 0x629a57831ec9 <unknown>\n#13 0x629a5783291e <unknown>\n#14 0x629a57ae59eb <unknown>\n#15 0x629a57ae9972 <unknown>\n#16 0x629a57ad2e15 <unknown>\n#17 0x629a57aea502 <unknown>\n#18 0x629a57ab7d2f <unknown>\n#19 0x629a57b0e578 <unknown>\n#20 0x629a57b0e750 <unknown>\n#21 0x629a57b1e48c <unknown>\n#22 0x78c5b04a5ac3 <unknown>",
    "statusTrace" : "browser = <selenium.webdriver.remote.webdriver.WebDriver (session=\"49b49506b3828d92e2d3c647c308c80c\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Удалить товар\")\n    def test_delete_product(browser, base_url):\n        admin_page = AdminPage(browser)\n        admin_page.open(base_url)\n        admin_page.login(\"user\", \"bitnami\")\n        admin_page.select_catalog()\n        admin_page.select_products()\n        HomePage(browser).scroll_down()\n>       admin_page.to_the_last_page()\n\ntests/test_start.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects/admin_page.py:105: in to_the_last_page\n    self.get_element(self.LAST_PAGE).click()\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7c30d43492d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x629a57b0e750 \\\\u003Cunknown>\\\\n#21 0x629a57b1e48c \\\\u003Cunknown>\\\\n#22 0x78c5b04a5ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\nE         (Session info: chrome=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x629a57b1f6ba <unknown>\nE       #1 0x629a577ef730 <unknown>\nE       #2 0x629a57845a96 <unknown>\nE       #3 0x629a578439ad <unknown>\nE       #4 0x629a57841447 <unknown>\nE       #5 0x629a5784030e <unknown>\nE       #6 0x629a57833d66 <unknown>\nE       #7 0x629a57861a52 <unknown>\nE       #8 0x629a57833719 <unknown>\nE       #9 0x629a57861c1e <unknown>\nE       #10 0x629a578801ca <unknown>\nE       #11 0x629a578617f3 <unknown>\nE       #12 0x629a57831ec9 <unknown>\nE       #13 0x629a5783291e <unknown>\nE       #14 0x629a57ae59eb <unknown>\nE       #15 0x629a57ae9972 <unknown>\nE       #16 0x629a57ad2e15 <unknown>\nE       #17 0x629a57aea502 <unknown>\nE       #18 0x629a57ab7d2f <unknown>\nE       #19 0x629a57b0e578 <unknown>\nE       #20 0x629a57b0e750 <unknown>\nE       #21 0x629a57b1e48c <unknown>\nE       #22 0x78c5b04a5ac3 <unknown>\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "Открываю http://10.0.2.15:8081/administration",
      "time" : {
        "start" : 1723034596470,
        "stop" : 1723034597260,
        "duration" : 790
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Авторизую пользователя",
      "time" : {
        "start" : 1723034597260,
        "stop" : 1723034599550,
        "duration" : 2290
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'user'"
      }, {
        "name" : "password",
        "value" : "'bitnami'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Перехожу в меню Каталог",
      "time" : {
        "start" : 1723034599550,
        "stop" : 1723034600156,
        "duration" : 606
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Выбираю товар",
      "time" : {
        "start" : 1723034600156,
        "stop" : 1723034600582,
        "duration" : 426
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Скроллю страницу вниз",
      "time" : {
        "start" : 1723034600582,
        "stop" : 1723034600592,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Перехожу на последнюю страницу",
      "time" : {
        "start" : 1723034600592,
        "stop" : 1723034601723,
        "duration" : 1131
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\n  (Session info: chrome=127.0.6533.88)\nStacktrace:\n#0 0x629a57b1f6ba <unknown>\n#1 0x629a577ef730 <unknown>\n#2 0x629a57845a96 <unknown>\n#3 0x629a578439ad <unknown>\n#4 0x629a57841447 <unknown>\n#5 0x629a5784030e <unknown>\n#6 0x629a57833d66 <unknown>\n#7 0x629a57861a52 <unknown>\n#8 0x629a57833719 <unknown>\n#9 0x629a57861c1e <unknown>\n#10 0x629a578801ca <unknown>\n#11 0x629a578617f3 <unknown>\n#12 0x629a57831ec9 <unknown>\n#13 0x629a5783291e <unknown>\n#14 0x629a57ae59eb <unknown>\n#15 0x629a57ae9972 <unknown>\n#16 0x629a57ad2e15 <unknown>\n#17 0x629a57aea502 <unknown>\n#18 0x629a57ab7d2f <unknown>\n#19 0x629a57b0e578 <unknown>\n#20 0x629a57b0e750 <unknown>\n#21 0x629a57b1e48c <unknown>\n#22 0x78c5b04a5ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.10/dist-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/fuenukkusu2501/Develop/tmp/OTUS_selenium_UI/page_objects/admin_page.py\", line 105, in to_the_last_page\n    self.get_element(self.LAST_PAGE).click()\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::finalizer",
    "time" : {
      "start" : 1723034601742,
      "stop" : 1723034602044,
      "duration" : 302
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d5282fff76d801a2",
      "name" : "failure_screenshot",
      "source" : "d5282fff76d801a2.png",
      "type" : "image/png",
      "size" : 162747
    }, {
      "uid" : "fd7725d62e6ee377",
      "name" : "page_source",
      "source" : "fd7725d62e6ee377.html",
      "type" : "text/html",
      "size" : 51008
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_start"
  }, {
    "name" : "host",
    "value" : "Ubuntu"
  }, {
    "name" : "thread",
    "value" : "309922-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_start"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "87bf070fc8784640",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (389, 943)\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n#0 0x60d0f05f2c5a <unknown>\n#1 0x60d0f02d5e2c <unknown>\n#2 0x60d0f0329406 <unknown>\n#3 0x60d0f0327246 <unknown>\n#4 0x60d0f0324c27 <unknown>\n#5 0x60d0f0323a60 <unknown>\n#6 0x60d0f031715f <unknown>\n#7 0x60d0f03455c2 <unknown>\n#8 0x60d0f0316ad9 <unknown>\n#9 0x60d0f034578e <unknown>\n#10 0x60d0f0364303 <unknown>\n#11 0x60d0f0345363 <unknown>\n#12 0x60d0f0315247 <unknown>\n#13 0x60d0f0315b9e <unknown>\n#14 0x60d0f05b922b <unknown>\n#15 0x60d0f05bd2d1 <unknown>\n#16 0x60d0f05a4ade <unknown>\n#17 0x60d0f05bde32 <unknown>\n#18 0x60d0f058977f <unknown>\n#19 0x60d0f05e2618 <unknown>\n#20 0x60d0f05e27f0 <unknown>\n#21 0x60d0f05f1d8c <unknown>\n#22 0x774d80e94ac3 <unknown>",
      "time" : {
        "start" : 1723034435784,
        "stop" : 1723034439878,
        "duration" : 4094
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a485b6f06477b115.json",
  "parameterValues" : [ ]
}