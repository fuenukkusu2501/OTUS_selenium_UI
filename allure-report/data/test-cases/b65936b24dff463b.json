{
  "uid" : "b65936b24dff463b",
  "name" : "Создать товар",
  "fullName" : "tests.test_start#test_add_product",
  "historyId" : "605f1327e44636668481b9c4c06efda9",
  "time" : {
    "start" : 1720461035169,
    "stop" : 1720461035956,
    "duration" : 787
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x583d8ac34863 <unknown>\n#1 0x583d8a92a8c6 <unknown>\n#2 0x583d8a9229f3 <unknown>\n#3 0x583d8a912b2b <unknown>\n#4 0x583d8a9140c2 <unknown>\n#5 0x583d8a912e4c <unknown>\n#6 0x583d8a912638 <unknown>\n#7 0x583d8a912485 <unknown>\n#8 0x583d8a910516 <unknown>\n#9 0x583d8a910a2a <unknown>\n#10 0x583d8a92d24e <unknown>\n#11 0x583d8a9b67c5 <unknown>\n#12 0x583d8a9975a2 <unknown>\n#13 0x583d8a9b5c19 <unknown>\n#14 0x583d8a997343 <unknown>\n#15 0x583d8a968593 <unknown>\n#16 0x583d8a968f5e <unknown>\n#17 0x583d8abf884b <unknown>\n#18 0x583d8abfc7a5 <unknown>\n#19 0x583d8abe6571 <unknown>\n#20 0x583d8abfd332 <unknown>\n#21 0x583d8abcb87f <unknown>\n#22 0x583d8ac23728 <unknown>\n#23 0x583d8ac238fb <unknown>\n#24 0x583d8ac339b4 <unknown>\n#25 0x7d92bc694ac3 <unknown>",
  "statusTrace" : "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa12cf8ac6bc8ac7e1328d26f62f2813\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Создать товар\")\n    def test_add_product(browser, base_url):\n        admin_page = AdminPage(browser)\n>       admin_page.open(base_url)\n\ntests/test_start.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects/admin_page.py:27: in open\n    self.browser.get(url + self.PATH)\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x74f15f7aafb0>, response = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x583d8ac238fb \\\\u003Cunknown>\\\\n#24 0x583d8ac339b4 \\\\u003Cunknown>\\\\n#25 0x7d92bc694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=123.0.6312.105)\nE       Stacktrace:\nE       #0 0x583d8ac34863 <unknown>\nE       #1 0x583d8a92a8c6 <unknown>\nE       #2 0x583d8a9229f3 <unknown>\nE       #3 0x583d8a912b2b <unknown>\nE       #4 0x583d8a9140c2 <unknown>\nE       #5 0x583d8a912e4c <unknown>\nE       #6 0x583d8a912638 <unknown>\nE       #7 0x583d8a912485 <unknown>\nE       #8 0x583d8a910516 <unknown>\nE       #9 0x583d8a910a2a <unknown>\nE       #10 0x583d8a92d24e <unknown>\nE       #11 0x583d8a9b67c5 <unknown>\nE       #12 0x583d8a9975a2 <unknown>\nE       #13 0x583d8a9b5c19 <unknown>\nE       #14 0x583d8a997343 <unknown>\nE       #15 0x583d8a968593 <unknown>\nE       #16 0x583d8a968f5e <unknown>\nE       #17 0x583d8abf884b <unknown>\nE       #18 0x583d8abfc7a5 <unknown>\nE       #19 0x583d8abe6571 <unknown>\nE       #20 0x583d8abfd332 <unknown>\nE       #21 0x583d8abcb87f <unknown>\nE       #22 0x583d8ac23728 <unknown>\nE       #23 0x583d8ac238fb <unknown>\nE       #24 0x583d8ac339b4 <unknown>\nE       #25 0x7d92bc694ac3 <unknown>\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1720461035169,
      "stop" : 1720461035169,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1720461032517,
      "stop" : 1720461035168,
      "duration" : 2651
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bb6bd2087111319b",
      "name" : "aa12cf8ac6bc8ac7e1328d26f62f2813",
      "source" : "bb6bd2087111319b.json",
      "type" : "application/json",
      "size" : 965
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x583d8ac34863 <unknown>\n#1 0x583d8a92a8c6 <unknown>\n#2 0x583d8a9229f3 <unknown>\n#3 0x583d8a912b2b <unknown>\n#4 0x583d8a9140c2 <unknown>\n#5 0x583d8a912e4c <unknown>\n#6 0x583d8a912638 <unknown>\n#7 0x583d8a912485 <unknown>\n#8 0x583d8a910516 <unknown>\n#9 0x583d8a910a2a <unknown>\n#10 0x583d8a92d24e <unknown>\n#11 0x583d8a9b67c5 <unknown>\n#12 0x583d8a9975a2 <unknown>\n#13 0x583d8a9b5c19 <unknown>\n#14 0x583d8a997343 <unknown>\n#15 0x583d8a968593 <unknown>\n#16 0x583d8a968f5e <unknown>\n#17 0x583d8abf884b <unknown>\n#18 0x583d8abfc7a5 <unknown>\n#19 0x583d8abe6571 <unknown>\n#20 0x583d8abfd332 <unknown>\n#21 0x583d8abcb87f <unknown>\n#22 0x583d8ac23728 <unknown>\n#23 0x583d8ac238fb <unknown>\n#24 0x583d8ac339b4 <unknown>\n#25 0x7d92bc694ac3 <unknown>",
    "statusTrace" : "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa12cf8ac6bc8ac7e1328d26f62f2813\")>, base_url = 'http://10.0.2.15:8081'\n\n    @allure.title(\"Создать товар\")\n    def test_add_product(browser, base_url):\n        admin_page = AdminPage(browser)\n>       admin_page.open(base_url)\n\ntests/test_start.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects/admin_page.py:27: in open\n    self.browser.get(url + self.PATH)\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x74f15f7aafb0>, response = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x583d8ac238fb \\\\u003Cunknown>\\\\n#24 0x583d8ac339b4 \\\\u003Cunknown>\\\\n#25 0x7d92bc694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=123.0.6312.105)\nE       Stacktrace:\nE       #0 0x583d8ac34863 <unknown>\nE       #1 0x583d8a92a8c6 <unknown>\nE       #2 0x583d8a9229f3 <unknown>\nE       #3 0x583d8a912b2b <unknown>\nE       #4 0x583d8a9140c2 <unknown>\nE       #5 0x583d8a912e4c <unknown>\nE       #6 0x583d8a912638 <unknown>\nE       #7 0x583d8a912485 <unknown>\nE       #8 0x583d8a910516 <unknown>\nE       #9 0x583d8a910a2a <unknown>\nE       #10 0x583d8a92d24e <unknown>\nE       #11 0x583d8a9b67c5 <unknown>\nE       #12 0x583d8a9975a2 <unknown>\nE       #13 0x583d8a9b5c19 <unknown>\nE       #14 0x583d8a997343 <unknown>\nE       #15 0x583d8a968593 <unknown>\nE       #16 0x583d8a968f5e <unknown>\nE       #17 0x583d8abf884b <unknown>\nE       #18 0x583d8abfc7a5 <unknown>\nE       #19 0x583d8abe6571 <unknown>\nE       #20 0x583d8abfd332 <unknown>\nE       #21 0x583d8abcb87f <unknown>\nE       #22 0x583d8ac23728 <unknown>\nE       #23 0x583d8ac238fb <unknown>\nE       #24 0x583d8ac339b4 <unknown>\nE       #25 0x7d92bc694ac3 <unknown>\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
    "steps" : [ {
      "name" : "Открываю http://10.0.2.15:8081/administration",
      "time" : {
        "start" : 1720461035169,
        "stop" : 1720461035955,
        "duration" : 786
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x583d8ac34863 <unknown>\n#1 0x583d8a92a8c6 <unknown>\n#2 0x583d8a9229f3 <unknown>\n#3 0x583d8a912b2b <unknown>\n#4 0x583d8a9140c2 <unknown>\n#5 0x583d8a912e4c <unknown>\n#6 0x583d8a912638 <unknown>\n#7 0x583d8a912485 <unknown>\n#8 0x583d8a910516 <unknown>\n#9 0x583d8a910a2a <unknown>\n#10 0x583d8a92d24e <unknown>\n#11 0x583d8a9b67c5 <unknown>\n#12 0x583d8a9975a2 <unknown>\n#13 0x583d8a9b5c19 <unknown>\n#14 0x583d8a997343 <unknown>\n#15 0x583d8a968593 <unknown>\n#16 0x583d8a968f5e <unknown>\n#17 0x583d8abf884b <unknown>\n#18 0x583d8abfc7a5 <unknown>\n#19 0x583d8abe6571 <unknown>\n#20 0x583d8abfd332 <unknown>\n#21 0x583d8abcb87f <unknown>\n#22 0x583d8ac23728 <unknown>\n#23 0x583d8ac238fb <unknown>\n#24 0x583d8ac339b4 <unknown>\n#25 0x7d92bc694ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/fuenukkusu2501/Develop/tmp/OTUS_selenium_UI/page_objects/admin_page.py\", line 27, in open\n    self.browser.get(url + self.PATH)\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/home/fuenukkusu2501/.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1720461036002,
      "stop" : 1720461036314,
      "duration" : 312
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3a7ab6eabdda835e",
      "name" : "failure_screenshot",
      "source" : "3a7ab6eabdda835e.png",
      "type" : "image/png",
      "size" : 32941
    }, {
      "uid" : "34e0e9e6443dab81",
      "name" : "page_source",
      "source" : "34e0e9e6443dab81.html",
      "type" : "text/html",
      "size" : 240406
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_start"
  }, {
    "name" : "host",
    "value" : "Ubuntu"
  }, {
    "name" : "thread",
    "value" : "14041-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_start"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "b65936b24dff463b.json",
  "parameterValues" : [ ]
}